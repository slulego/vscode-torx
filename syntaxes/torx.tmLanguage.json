{
	"scopeName": "text.html.torx",
	"injections": {
		"text.html.basic - (meta.embedded | meta.tag), L:text.html.torx meta.tag, L:text.html.torx source.js": {
			"patterns": [{
				"include": "#torx-comments"
			}, {
				"include": "#torx-control"
			}]
		}
	},
	"patterns": [{
		"include": "#torx-comments"
	}, {
		"include": "#torx-code-block"
	}, {
		"include": "#torx-escape-entity"
	}, {
		"include": "#torx-control"
	}, {
		"include": "#torx-function"
	}, {
		"include": "#torx-include"
	}, {
		"include": "#torx-else"
	}, {
		"include": "#torx-else-if"
	}, {
		"include": "#torx-switch"
	}, {
		"include": "#torx-expression-explicit"
	}, {
		"include": "#torx-expression-implicit"
	}, {
		"include": "text.html.basic"
	}],
	"repository": {
		"torx-comments": {
			"begin": "\\@\\*",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.source.torx"
				}
			},
			"name": "comment.block.torx",
			"end": "\\*\\@"
		},
		"torx-code-block": {
			"begin": "\\@\\{",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				}
			},
			"patterns": [{
				"include": "source.js"
			}],
			"end": "\\}"
		},
		"torx-expression-explicit": {
			"name": "meta.expression.explicit.torx",
			"begin": "(\\@)\\(",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				}
			},
			"patterns": [{
				"include": "source.js"
			}],
			"end": "\\)"
		},
		"torx-expression-implicit": {
			"name": "meta.expression.implicit.torx",
			"match": "(?<!\\@)(\\@)([\\w\\.\\[\\]\\(\\)]+)",
			"captures": {
				"0": {
					"name": "variable.expression.torx"
				},
				"1": {
					"name": "keyword.control.torx"
				},
				"2": {
					"patterns": [{
						"include": "source.js"
					}]
				}
			}
		},
		"torx-escape-entity": {
			"match": "\\@\\@",
			"name": "keyword.control.torx"
		},
		"torx-control": {
			"begin": "\\@(for|if|while)\\s*\\((.*)\\)[\\n\\s]*{",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				},
				"2": {
					"patterns": [{
						"include": "source.js"
					}]
				}
			},
			"patterns": [{
				"include": "text.html.torx"
			}],
			"end": "}"
		},
		"torx-function": {
			"begin": "(\\@function)\\s(\\w+)\\s?(\\()",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				},
				"1": {
					"name": "keyword.control.torx"
				},
				"2": {
					"name": "keyword.function.torx"
				}
			},
			"patterns": [{
				"include": "source.js"
			}],
			"end": "\\)"
		},
		"torx-include": {
			"begin": "(\\@include)\\s*\\(",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				}
			},
			"patterns": [{
				"include": "source.js"
			}],
			"end": "\\)"
		},
		"torx-else": {
			"match": "\\}\\s*else\\s*\\{",
			"name": "keyword.control.torx"
		},
		"torx-else-if": {
			"begin": "(else\\sif)\\s*\\(",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				}
			},
			"patterns": [{
				"include": "source.js"
			}],
			"end": "\\)"
		},
		"torx-switch": {
			"begin": "(\\@switch)\\s*\\(",
			"captures": {
				"0": {
					"name": "keyword.control.torx"
				}
			},
			"patterns": [{
				"include": "source.js"
			}],
			"end": "\\)"
		}
	}
}